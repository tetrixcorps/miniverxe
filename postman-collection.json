{
  "info": {
    "name": "TETRIX Cross-Platform Management Services API Tests",
    "description": "Comprehensive API testing for TETRIX and JoRoMi cross-platform management services",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:4321",
      "type": "string"
    },
    {
      "key": "localUrl",
      "value": "http://localhost:4321",
      "type": "string"
    },
    {
      "key": "testPhone",
      "value": "+1234567890",
      "type": "string"
    },
    {
      "key": "testSessionId",
      "value": "test_session_123",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "test_cross_platform_secret_key_12345",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Voice API - Call Management",
      "item": [
        {
          "name": "Initiate Voice Call",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"to\": \"{{testPhone}}\",\n  \"from\": \"+1987654321\",\n  \"webhookUrl\": \"https://tetrixcorp.com/webhooks/voice\",\n  \"recordCall\": true,\n  \"transcriptionEnabled\": true,\n  \"language\": \"en-US\",\n  \"timeout\": 30,\n  \"maxDuration\": 300\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/voice/initiate",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "initiate"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has sessionId', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('sessionId');",
                  "    pm.expect(jsonData.sessionId).to.be.a('string');",
                  "});",
                  "",
                  "pm.test('Response has callId', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('callId');",
                  "    pm.expect(jsonData.callId).to.be.a('string');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Active Sessions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/voice/sessions",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "sessions"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is array', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Session Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/voice/sessions/{{testSessionId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "sessions", "{{testSessionId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200 or 404', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "End Call",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reason\": \"User requested\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/voice/sessions/{{testSessionId}}/end",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "sessions", "{{testSessionId}}", "end"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200 or 404', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Cleanup Sessions",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/voice/cleanup",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "cleanup"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response indicates success', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Voice API - Webhooks",
      "item": [
        {
          "name": "Voice Webhook Handler",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_type\": \"call.answered\",\n  \"data\": {\n    \"call_control_id\": \"test_call_123\",\n    \"call_session_id\": \"{{testSessionId}}\",\n    \"from\": \"+1987654321\",\n    \"to\": \"{{testPhone}}\",\n    \"direction\": \"outbound\",\n    \"state\": \"answered\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/voice/webhook",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "webhook"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "TeXML Response Handler",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"CallSid\": \"test_call_123\",\n  \"From\": \"+1987654321\",\n  \"To\": \"{{testPhone}}\",\n  \"CallStatus\": \"in-progress\",\n  \"Digits\": \"1\",\n  \"SpeechResult\": \"Hello, I need help with my account\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/voice/texml",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "texml"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is XML', function () {",
                  "    pm.expect(pm.response.text()).to.include('<?xml');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/voice/health",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "health"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response indicates healthy', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('status');",
                  "    pm.expect(jsonData.status).to.equal('healthy');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Voice API - Transcription",
      "item": [
        {
          "name": "Transcribe Audio",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"audioUrl\": \"https://example.com/audio/test.wav\",\n  \"sessionId\": \"{{testSessionId}}\",\n  \"language\": \"en-US\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/voice/transcribe",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "transcribe"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has transcription', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('transcription');",
                  "    pm.expect(jsonData.transcription).to.be.a('string');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Transcription",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/voice/transcribe/{{testSessionId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "transcribe", "{{testSessionId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200 or 404', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Batch Transcription",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"audioUrls\": [\"https://example.com/audio1.wav\", \"https://example.com/audio2.wav\"],\n  \"sessionIds\": [\"session1\", \"session2\"],\n  \"language\": \"en-US\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/voice/transcribe/batch",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "transcribe", "batch"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has sessions array', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('sessions');",
                  "    pm.expect(jsonData.sessions).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Transcription Statistics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/voice/transcribe/stats",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "transcribe", "stats"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has stats', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('stats');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Transcription Health Check",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/voice/transcribe/health",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "transcribe", "health"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response indicates healthy', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('status');",
                  "    pm.expect(jsonData.status).to.equal('healthy');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Voice API - Demo & Testing",
      "item": [
        {
          "name": "Demo Call",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"to\": \"{{testPhone}}\",\n  \"scenario\": \"customer_support\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/voice/demo/call",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "demo", "call"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Demo TeXML",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"scenario\": \"welcome_message\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/voice/demo/texml",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "demo", "texml"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Demo Transcription",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"audioUrl\": \"https://example.com/demo.wav\",\n  \"language\": \"en-US\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/voice/demo/transcribe",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "demo", "transcribe"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Demo AI Response",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"transcription\": \"Hello, I need help with my account\",\n  \"sessionId\": \"{{testSessionId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/voice/demo/ai-response",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "demo", "ai-response"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has AI data', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData.data).to.have.property('response');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Demo Voice Flow",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"scenario\": \"full_customer_support\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/voice/demo/voice-flow",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "demo", "voice-flow"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Capabilities",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/voice/demo/capabilities",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "demo", "capabilities"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has capabilities', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('capabilities');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Run All Tests",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/voice/test/all",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "test", "all"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Voice API - Cross-Platform Integration",
      "item": [
        {
          "name": "Initiate Cross-Platform Call",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"to\": \"{{testPhone}}\",\n  \"platform\": \"tetrix\",\n  \"integrationType\": \"voice\",\n  \"metadata\": {\n    \"userId\": \"user123\",\n    \"conversationId\": \"conv456\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/voice/integration/initiate",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "integration", "initiate"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Process Cross-Platform Transcription",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sessionId\": \"{{testSessionId}}\",\n  \"audioUrl\": \"https://example.com/audio.wav\",\n  \"platform\": \"tetrix\",\n  \"language\": \"en-US\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/voice/integration/transcribe",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "integration", "transcribe"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Cross-Platform Sessions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/voice/integration/sessions",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "integration", "sessions"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Cross-Platform Session",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/voice/integration/sessions/{{testSessionId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "integration", "sessions", "{{testSessionId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200 or 404', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Cross-Channel Messages",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/voice/integration/sessions/{{testSessionId}}/messages",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "integration", "sessions", "{{testSessionId}}", "messages"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200 or 404', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Session Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"completed\",\n  \"reason\": \"User ended call\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/voice/integration/sessions/{{testSessionId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "integration", "sessions", "{{testSessionId}}", "status"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200 or 404', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Cleanup Cross-Platform Sessions",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/voice/integration/cleanup",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "integration", "cleanup"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Integration Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/voice/integration/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "integration", "status"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has status', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('status');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Test Cross-Platform Integration",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/voice/integration/test",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "integration", "test"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "2FA API - Authentication",
      "item": [
        {
          "name": "Send OTP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phoneNumber\": \"{{testPhone}}\",\n  \"method\": \"voice\",\n  \"provider\": \"telnyx\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/2fa/send",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "2fa", "send"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200 or 400', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 400]);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Verify OTP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"verificationId\": \"test_verification_123\",\n  \"otpCode\": \"123456\",\n  \"provider\": \"telnyx\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/2fa/verify",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "2fa", "verify"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200 or 400', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 400]);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Webhooks - External Services",
      "item": [
        {
          "name": "Telnyx Voice Webhook",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_type\": \"call.answered\",\n  \"data\": {\n    \"call_control_id\": \"test_call_123\",\n    \"call_session_id\": \"{{testSessionId}}\",\n    \"from\": \"+1987654321\",\n    \"to\": \"{{testPhone}}\",\n    \"direction\": \"outbound\",\n    \"state\": \"answered\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/webhooks/telnyx/voice",
              "host": ["{{baseUrl}}"],
              "path": ["webhooks", "telnyx", "voice"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Telnyx SMS Webhook",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_type\": \"message.finalized\",\n  \"data\": {\n    \"id\": \"test_message_123\",\n    \"from\": \"+1987654321\",\n    \"to\": \"{{testPhone}}\",\n    \"text\": \"Your verification code is: 123456\",\n    \"direction\": \"outbound\",\n    \"status\": \"delivered\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/webhooks/telnyx/sms",
              "host": ["{{baseUrl}}"],
              "path": ["webhooks", "telnyx", "sms"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Stripe Webhook",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Stripe-Signature",
                "value": "test_signature"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": \"evt_test_webhook\",\n  \"object\": \"event\",\n  \"type\": \"customer.subscription.created\",\n  \"data\": {\n    \"object\": {\n      \"id\": \"sub_test123\",\n      \"customer\": \"cus_test123\",\n      \"status\": \"active\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/webhooks/stripe",
              "host": ["{{baseUrl}}"],
              "path": ["webhooks", "stripe"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Sinch Webhook",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event\": \"conversation_started\",\n  \"timestamp\": \"2025-01-10T21:00:00Z\",\n  \"data\": {\n    \"conversation_id\": \"conv_test123\",\n    \"contact_id\": \"contact_test123\",\n    \"channel\": \"whatsapp\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/webhooks/sinch",
              "host": ["{{baseUrl}}"],
              "path": ["webhooks", "sinch"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Health Checks & Monitoring",
      "item": [
        {
          "name": "Root Health Check",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/",
              "host": ["{{baseUrl}}"],
              "path": [""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response time is less than 2000ms', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(2000);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Voice API Health Check",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/voice/health",
              "host": ["{{baseUrl}}"],
              "path": ["api", "voice", "health"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Test Endpoint",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"test\": \"data\",\n  \"timestamp\": \"2025-01-10T21:00:00Z\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/test",
              "host": ["{{baseUrl}}"],
              "path": ["api", "test"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has success field', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}
