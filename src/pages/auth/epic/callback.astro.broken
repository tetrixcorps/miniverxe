---
// Epic OAuth 2.0 Callback Handler
// Handles the OAuth callback from Epic and exchanges code for tokens

// import { createEpicOAuthService, DEFAULT_EPIC_CONFIG } from '../../../services/integrations/EpicOAuthService';

// Get URL parameters
const url = new URL(Astro.request.url);
const code = url.searchParams.get('code');
const state = url.searchParams.get('state');
const error = url.searchParams.get('error');
const errorDescription = url.searchParams.get('error_description');

let authResult: {
  success: boolean;
  message: string;
  data?: any;
} = {
  success: false,
  message: 'Authentication failed'
};

// Handle OAuth callback
if (error) {
  authResult = {
    success: false,
    message: `Epic OAuth error: ${error} - ${errorDescription || 'Unknown error'}`
  };
} else if (code) {
  try {
    // Epic OAuth service temporarily disabled
    authResult = {
      success: false,
      message: 'Epic OAuth service temporarily unavailable'
    };
  } catch (error: any) {
    authResult = {
      success: false,
      message: `Epic OAuth error: ${error.message}`
    };
  }
} else {
  authResult = {
    success: false,
    message: 'No authorization code received from Epic'
  };
}
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Epic OAuth Callback - TETRIX</title>
  <style>
    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      margin: 0;
      padding: 0;
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    .container {
      background: white;
      border-radius: 12px;
      box-shadow: 0 20px 40px rgba(0,0,0,0.1);
      padding: 2rem;
      max-width: 500px;
      width: 90%;
      text-align: center;
    }
    .success {
      color: #10b981;
    }
    .error {
      color: #ef4444;
    }
    .spinner {
      border: 3px solid #f3f3f3;
      border-top: 3px solid #667eea;
      border-radius: 50%;
      width: 40px;
      height: 40px;
      animation: spin 1s linear infinite;
      margin: 0 auto 1rem;
    }
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
    .btn {
      background: #667eea;
      color: white;
      border: none;
      padding: 12px 24px;
      border-radius: 8px;
      cursor: pointer;
      font-size: 16px;
      margin-top: 1rem;
      transition: background 0.3s;
    }
    .btn:hover {
      background: #5a67d8;
    }
  </style>
</head>
<body>
  <div class="container">
    {authResult.success ? (
      <>
        <div class="success">
          <svg width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin: 0 auto 1rem;">
            <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
            <polyline points="22,4 12,14.01 9,11.01"></polyline>
          </svg>
        </div>
        <h2 class="success">Authentication Successful</h2>
        <p>You have successfully connected to Epic MyChart.</p>
        <p>Redirecting to your healthcare dashboard...</p>
        <div class="spinner"></div>
      </>
    ) : (
      <>
        <div class="error">
          <svg width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin: 0 auto 1rem;">
            <circle cx="12" cy="12" r="10"></circle>
            <line x1="15" y1="9" x2="9" y2="15"></line>
            <line x1="9" y1="9" x2="15" y2="15"></line>
          </svg>
        </div>
        <h2 class="error">Authentication Failed</h2>
        <p>{authResult.message}</p>
        <button class="btn" onclick="window.close()">Close Window</button>
      </>
    )}
  </div>

  <script>
    // Handle successful authentication
    if ({authResult.success}) {
      // Store authentication data in localStorage
      localStorage.setItem('epic_auth_success', 'true');
      localStorage.setItem('epic_auth_data', JSON.stringify({authResult.data}));
      
      // Redirect to healthcare dashboard after 3 seconds
      setTimeout(() => {
        window.location.href = '/dashboards/healthcare';
      }, 3000);
    }

    // Handle authentication failure
    if (!{authResult.success}) {
      // Store error in localStorage
      localStorage.setItem('epic_auth_error', '{authResult.message}');
    }
  </script>
</body>
</html>
