---
// Minimal test page to isolate the contact page issue
---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Test Contact Page</title>
</head>
<body>
    <h1>Test Contact Page</h1>
    <div id="shango-chat-widget" style="height: 400px; border: 1px solid #ccc; padding: 20px;">
        <!-- Chat interface will be rendered here -->
    </div>

    <script>
        // Test SHANGO Chat Integration
        function initializeSHANGOChatWidget() {
            console.log('Initializing simplified SHANGO Chat...');
            
            const chatContainer = document.getElementById('shango-chat-widget');
            if (!chatContainer) {
                console.error('Chat container not found!');
                return;
            }
            
            // Show the initial chat interface
            renderInitialChatInterface();
        }

        // Render initial chat interface
        function renderInitialChatInterface() {
            const chatContainer = document.getElementById('shango-chat-widget');
            if (!chatContainer) return;

            chatContainer.innerHTML = `
                <div style="text-align: center; padding: 50px;">
                    <div style="width: 64px; height: 64px; background: linear-gradient(135deg, #667eea, #764ba2); border-radius: 50%; display: inline-flex; align-items: center; justify-content: center; margin-bottom: 16px;">
                        <span style="font-size: 24px; color: white;">⚡</span>
                    </div>
                    <h3 style="font-size: 20px; font-weight: bold; color: #2d3748; margin-bottom: 8px;">SHANGO AI Super Agent</h3>
                    <p style="color: #718096; margin-bottom: 16px;">Our AI Super Agent is ready to help you with enterprise inquiries and technical support.</p>
                    <div style="margin-bottom: 24px; font-size: 14px; color: #718096;">
                        <p>• Instant responses to enterprise queries</p>
                        <p>• Technical support and troubleshooting</p>
                        <p>• Solution recommendations and pricing</p>
                        <p>• Escalation to human experts when needed</p>
                    </div>
                    <button onclick="startSHANGOChat()" style="background: linear-gradient(135deg, #667eea, #764ba2); color: white; padding: 12px 24px; border: none; border-radius: 8px; font-weight: 600; cursor: pointer;">
                        Start Chat with SHANGO
                    </button>
                </div>
            `;
        }

        // Start SHANGO Chat
        async function startSHANGOChat() {
            const chatContainer = document.getElementById('shango-chat-widget');
            if (!chatContainer) return;

            try {
                // Show loading state
                chatContainer.innerHTML = `
                    <div style="text-align: center; padding: 50px;">
                        <div style="width: 48px; height: 48px; border: 4px solid #f3f3f3; border-top: 4px solid #667eea; border-radius: 50%; animation: spin 1s linear infinite; margin: 0 auto 16px;"></div>
                        <p style="color: #718096;">Starting SHANGO AI Super Agent...</p>
                    </div>
                    <style>
                        @keyframes spin {
                            0% { transform: rotate(0deg); }
                            100% { transform: rotate(360deg); }
                        }
                    </style>
                `;

                // Create session
                const response = await fetch('/api/v1/shango/sessions', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        userId: `test-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,
                        agentId: 'shango-general',
                        channel: 'chat'
                    })
                });

                if (response.ok) {
                    const data = await response.json();
                    window.currentSession = data.session;
                    window.messages = data.session.messages || [];
                    renderChatInterface();
                } else {
                    throw new Error('Failed to start chat session');
                }
            } catch (error) {
                console.error('Error starting chat:', error);
                chatContainer.innerHTML = `
                    <div style="text-align: center; padding: 50px;">
                        <div style="width: 64px; height: 64px; background: #fed7d7; border-radius: 50%; display: inline-flex; align-items: center; justify-content: center; margin-bottom: 16px;">
                            <span style="font-size: 24px; color: #e53e3e;">⚠️</span>
                        </div>
                        <h3 style="font-size: 20px; font-weight: bold; color: #2d3748; margin-bottom: 8px;">Connection Error</h3>
                        <p style="color: #718096; margin-bottom: 16px;">Unable to start SHANGO chat. Please try again.</p>
                        <button onclick="startSHANGOChat()" style="background: linear-gradient(135deg, #667eea, #764ba2); color: white; padding: 12px 24px; border: none; border-radius: 8px; font-weight: 600; cursor: pointer;">
                            Try Again
                        </button>
                    </div>
                `;
            }
        }

        // Render chat interface
        function renderChatInterface() {
            const chatContainer = document.getElementById('shango-chat-widget');
            if (!chatContainer) return;

            chatContainer.innerHTML = `
                <div style="height: 400px; display: flex; flex-direction: column; border: 1px solid #e2e8f0; border-radius: 8px; overflow: hidden;">
                    <!-- Header -->
                    <div style="background: linear-gradient(135deg, #667eea, #764ba2); color: white; padding: 16px; display: flex; justify-content: space-between; align-items: center;">
                        <div style="display: flex; align-items: center; gap: 8px;">
                            <span style="font-size: 18px;">⚡</span>
                            <div>
                                <h3 style="font-weight: 600; margin: 0;">SHANGO</h3>
                                <p style="font-size: 12px; opacity: 0.9; margin: 0;">AI Super Agent Online</p>
                            </div>
                        </div>
                        <button onclick="closeSHANGOChat()" style="color: white; background: none; border: none; cursor: pointer; font-size: 18px;">✕</button>
                    </div>

                    <!-- Messages -->
                    <div id="shango-messages" style="flex: 1; overflow-y: auto; padding: 16px; background: #f7fafc;">
                        ${window.messages.map(message => renderMessage(message)).join('')}
                    </div>

                    <!-- Input -->
                    <div style="padding: 16px; border-top: 1px solid #e2e8f0; background: white;">
                        <div style="display: flex; gap: 8px;">
                            <input
                                type="text"
                                id="shango-message-input"
                                placeholder="Ask SHANGO anything..."
                                style="flex: 1; border: 1px solid #d1d5db; border-radius: 6px; padding: 8px 12px; outline: none;"
                                onkeypress="handleKeyPress(event)"
                            />
                            <button
                                onclick="sendSHANGOMessage()"
                                style="background: linear-gradient(135deg, #667eea, #764ba2); color: white; padding: 8px 16px; border: none; border-radius: 6px; cursor: pointer;"
                            >
                                Send
                            </button>
                        </div>
                    </div>
                </div>
            `;
        }

        // Render individual message
        function renderMessage(message) {
            const isUser = message.role === 'user';
            const isSHANGO = message.role === 'assistant';
            
            return `
                <div style="display: flex; ${isUser ? 'justify-content: flex-end' : 'justify-content: flex-start'}; margin-bottom: 8px;">
                    <div style="max-width: 80%; padding: 8px 12px; border-radius: 12px; ${
                        isUser 
                            ? 'background: #3b82f6; color: white' 
                            : isSHANGO
                            ? 'background: linear-gradient(135deg, #e0e7ff, #ddd6fe); color: #5b21b6; border: 1px solid #c4b5fd'
                            : 'background: #f3f4f6; color: #374151'
                    }">
                        ${isSHANGO ? '<div style="display: flex; align-items: center; gap: 4px; margin-bottom: 4px;"><span style="font-size: 12px; font-weight: 600;">⚡ SHANGO</span></div>' : ''}
                        <p style="margin: 0; font-size: 14px;">${message.content}</p>
                        <p style="margin: 4px 0 0 0; font-size: 11px; opacity: 0.7;">${new Date(message.timestamp).toLocaleTimeString()}</p>
                    </div>
                </div>
            `;
        }

        // Close chat
        function closeSHANGOChat() {
            const chatContainer = document.getElementById('shango-chat-widget');
            if (!chatContainer) return;

            renderInitialChatInterface();
            window.currentSession = null;
            window.messages = [];
        }

        // Handle key press
        function handleKeyPress(event) {
            if (event.key === 'Enter' && !event.shiftKey) {
                event.preventDefault();
                sendSHANGOMessage();
            }
        }

        // Send message
        async function sendSHANGOMessage() {
            const input = document.getElementById('shango-message-input');
            const message = input.value.trim();
            
            if (!message || !window.currentSession) return;

            // Add user message
            const userMessage = {
                id: `user-${Date.now()}`,
                role: 'user',
                content: message,
                timestamp: new Date().toISOString(),
                type: 'text'
            };
            
            window.messages.push(userMessage);
            input.value = '';
            updateMessagesDisplay();
            
            try {
                // Send message to API
                const response = await fetch(`/api/v1/shango/sessions/${window.currentSession.id}/messages`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        message: message,
                        role: 'user',
                        agentId: 'shango-general'
                    })
                });

                if (response.ok) {
                    const data = await response.json();
                    
                    // Add AI response
                    const aiMessage = {
                        id: data.aiResponse.id,
                        role: 'assistant',
                        content: data.aiResponse.content,
                        timestamp: data.aiResponse.timestamp,
                        type: 'text',
                        agentId: data.aiResponse.agentId
                    };
                    
                    window.messages.push(aiMessage);
                    updateMessagesDisplay();
                } else {
                    throw new Error('Failed to send message');
                }
            } catch (error) {
                console.error('Error sending message:', error);
                
                // Fallback response
                const fallbackMessage = {
                    id: `fallback-${Date.now()}`,
                    role: 'assistant',
                    content: "Thank you for your message! I'm SHANGO, your AI Super Agent. I can help you with information about our enterprise communication platform, technical support, pricing, demos, or any other questions you might have. What would you like to know more about?",
                    timestamp: new Date().toISOString(),
                    type: 'text',
                    agentId: 'shango-general'
                };
                
                window.messages.push(fallbackMessage);
                updateMessagesDisplay();
            }
        }

        // Update messages display
        function updateMessagesDisplay() {
            const messagesContainer = document.getElementById('shango-messages');
            if (messagesContainer) {
                messagesContainer.innerHTML = window.messages.map(message => renderMessage(message)).join('');
                messagesContainer.scrollTop = messagesContainer.scrollHeight;
            }
        }

        // Initialize when page loads
        document.addEventListener('DOMContentLoaded', function() {
            initializeSHANGOChatWidget();
        });
    </script>
</body>
</html>
