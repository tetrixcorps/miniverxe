---
import MainLayout from '../../components/layout/MainLayout.astro';

// In a real production app, you'd use proper authentication
// For now, we'll use a simple password check
const adminPassword = import.meta.env.ADMIN_PASSWORD || 'tetrix2024';
---

<MainLayout>
  <div class="min-h-screen bg-gray-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">
      <div>
        <div class="mx-auto h-12 w-12 bg-brand-orange rounded-lg flex items-center justify-center">
          <svg class="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
          </svg>
        </div>
        <h2 class="mt-6 text-center text-3xl font-heading font-bold text-gray-900">
          Admin Login
        </h2>
        <p class="mt-2 text-center text-sm text-gray-600">
          Access TETRIX contact submissions
        </p>
      </div>
      
      <form id="login-form" class="mt-8 space-y-6">
        <div class="rounded-md shadow-sm -space-y-px">
          <div>
            <label for="password" class="sr-only">Password</label>
            <input 
              id="password" 
              name="password" 
              type="password" 
              required 
              class="appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-brand-orange focus:border-brand-orange focus:z-10 sm:text-sm" 
              placeholder="Enter admin password"
            />
          </div>
        </div>

        <div>
          <button 
            type="submit" 
            id="login-btn"
            class="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-brand-orange hover:bg-brand-red focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-brand-orange transition-colors"
          >
            <span id="login-text">Sign in</span>
            <span id="loading-text" class="hidden">Signing in...</span>
          </button>
        </div>

        <div id="error-message" class="hidden bg-red-50 border border-red-200 rounded-md p-4">
          <div class="flex">
            <div class="flex-shrink-0">
              <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
              </svg>
            </div>
            <div class="ml-3">
              <h3 class="text-sm font-medium text-red-800">
                Invalid password
              </h3>
              <div class="mt-2 text-sm text-red-700">
                <p>Please check your password and try again.</p>
              </div>
            </div>
          </div>
        </div>
      </form>

      <div class="text-center">
        <a href="/" class="text-brand-orange hover:text-brand-red text-sm">
          ‚Üê Back to TETRIX
        </a>
      </div>
    </div>
  </div>
</MainLayout>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('login-form');
    const passwordInput = document.getElementById('password');
    const loginBtn = document.getElementById('login-btn');
    const loginText = document.getElementById('login-text');
    const loadingText = document.getElementById('loading-text');
    const errorMessage = document.getElementById('error-message');

    // Check if already logged in
    if (sessionStorage.getItem('adminAuthenticated') === 'true') {
      window.location.href = '/admin/contact-submissions';
    }

    form.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const password = passwordInput.value.trim();
      
      // Show loading state
      loginBtn.disabled = true;
      loginText.classList.add('hidden');
      loadingText.classList.remove('hidden');
      errorMessage.classList.add('hidden');

      try {
        // Simple password check (in production, use proper authentication)
        const response = await fetch('/api/admin/login', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ password })
        });

        const result = await response.json();

        if (result.success) {
          // Store authentication state
          sessionStorage.setItem('adminAuthenticated', 'true');
          sessionStorage.setItem('adminLoginTime', Date.now().toString());
          
          // Redirect to admin panel
          window.location.href = '/admin/contact-submissions';
        } else {
          // Show error
          errorMessage.classList.remove('hidden');
          passwordInput.focus();
        }
      } catch (error) {
        console.error('Login error:', error);
        errorMessage.classList.remove('hidden');
      } finally {
        // Reset button state
        loginBtn.disabled = false;
        loginText.classList.remove('hidden');
        loadingText.classList.add('hidden');
      }
    });
  });
</script> 