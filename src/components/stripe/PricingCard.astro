---
// Pricing Card Component for Dashboard Stripe Integration
// Displays pricing plans with trial options and checkout integration

import { getPriceMappingByService } from '../../config/stripePriceMapping';

export interface Props {
  serviceType: 'healthcare' | 'construction' | 'logistics';
  tier: string;
  isPopular?: boolean;
  showTrialButton?: boolean;
  successUrl?: string;
  cancelUrl?: string;
}

const {
  serviceType,
  tier,
  isPopular = false,
  showTrialButton = true,
  successUrl = '/dashboard?trial=success',
  cancelUrl = '/dashboard?trial=cancelled'
} = Astro.props;

const priceMapping = getPriceMappingByService(serviceType, tier);

if (!priceMapping) {
  throw new Error(`Price mapping not found for ${serviceType} - ${tier}`);
}

const serviceIcons = {
  healthcare: 'üè•',
  construction: 'üèóÔ∏è',
  logistics: 'üöõ'
};

const serviceColors = {
  healthcare: {
    primary: 'from-green-500 to-emerald-600',
    secondary: 'from-green-50 to-emerald-50',
    accent: 'text-green-600',
    border: 'border-green-200'
  },
  construction: {
    primary: 'from-orange-500 to-amber-600',
    secondary: 'from-orange-50 to-amber-50',
    accent: 'text-orange-600',
    border: 'border-orange-200'
  },
  logistics: {
    primary: 'from-blue-500 to-indigo-600',
    secondary: 'from-blue-50 to-indigo-50',
    accent: 'text-blue-600',
    border: 'border-blue-200'
  }
};

const colors = serviceColors[serviceType];
---

<div class={`relative bg-white rounded-xl shadow-lg border-2 ${isPopular ? colors.border : 'border-gray-200'} overflow-hidden transition-all duration-200 hover:shadow-xl ${isPopular ? 'scale-105' : 'hover:scale-102'}`}>
  {isPopular && (
    <div class={`absolute top-0 left-0 right-0 bg-gradient-to-r ${colors.primary} text-white text-center py-2 text-sm font-semibold`}>
      Most Popular
    </div>
  )}
  
  <div class={`p-6 ${isPopular ? 'pt-12' : ''}`}>
    <!-- Header -->
    <div class="text-center mb-6">
      <div class={`w-16 h-16 mx-auto mb-4 rounded-full bg-gradient-to-r ${colors.secondary} flex items-center justify-center`}>
        <span class="text-3xl">{serviceIcons[serviceType]}</span>
      </div>
      <h3 class="text-2xl font-bold text-gray-900 mb-2">{priceMapping.planName}</h3>
      <p class="text-gray-600 text-sm mb-4">{priceMapping.description}</p>
      
      <!-- Pricing -->
      <div class="mb-4">
        <div class="flex items-baseline justify-center">
          <span class="text-4xl font-bold text-gray-900">${priceMapping.basePrice}</span>
          {priceMapping.perUnitPrice && (
            <span class="text-lg text-gray-500 ml-1">+ ${priceMapping.perUnitPrice}/unit</span>
          )}
        </div>
        <p class="text-sm text-gray-500 mt-1">{priceMapping.period}</p>
      </div>
    </div>

    <!-- Features -->
    <div class="mb-6">
      <ul class="space-y-3">
        {priceMapping.features.map((feature, index) => (
          <li class="flex items-start space-x-3">
            <div class="w-5 h-5 bg-green-100 rounded-full flex items-center justify-center mt-0.5 flex-shrink-0">
              <svg class="w-3 h-3 text-green-600" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
              </svg>
            </div>
            <span class="text-sm text-gray-700">{feature}</span>
          </li>
        ))}
      </ul>
    </div>

    <!-- Trial Information -->
    {priceMapping.isTrialEligible && (
      <div class={`bg-gradient-to-r ${colors.secondary} rounded-lg p-4 mb-6`}>
        <div class="flex items-center space-x-2 mb-2">
          <span class="text-2xl">üéâ</span>
          <h4 class="font-semibold text-gray-900">7-Day Free Trial</h4>
        </div>
        <p class="text-sm text-gray-600">
          No charges during trial. Payment method required to start.
        </p>
      </div>
    )}

    <!-- Action Buttons -->
    <div class="space-y-3">
      {showTrialButton && priceMapping.isTrialEligible ? (
        <button 
          id={`start-trial-${serviceType}-${tier}`}
          class={`w-full bg-gradient-to-r ${colors.primary} text-white py-3 px-6 rounded-lg font-semibold hover:opacity-90 transition-all duration-200 shadow-lg`}
          data-price-id={priceMapping.priceId}
          data-service-type={serviceType}
          data-plan-name={priceMapping.planName}
          data-base-price={priceMapping.basePrice}
          data-per-unit-price={priceMapping.perUnitPrice || ''}
          data-period={priceMapping.period}
          data-features={JSON.stringify(priceMapping.features)}
          data-trial-days="7"
          data-success-url={successUrl}
          data-cancel-url={cancelUrl}
        >
          Start 7-Day Free Trial
        </button>
      ) : (
        <button 
          class={`w-full bg-gradient-to-r ${colors.primary} text-white py-3 px-6 rounded-lg font-semibold hover:opacity-90 transition-all duration-200 shadow-lg`}
          disabled
        >
          {priceMapping.isTrialEligible ? 'Contact Sales' : 'Custom Pricing'}
        </button>
      )}
      
      <button class={`w-full border-2 ${colors.border} ${colors.accent} py-2 px-6 rounded-lg font-semibold hover:bg-gray-50 transition-colors`}>
        Learn More
      </button>
    </div>

    <!-- Security Notice -->
    <div class="mt-4 text-center">
      <p class="text-xs text-gray-500">
        üîí Secure payment processing by Stripe
      </p>
    </div>
  </div>
</div>

<script>
  // Initialize pricing card functionality
  document.addEventListener('DOMContentLoaded', () => {
    // Add event listeners to all trial buttons
    document.querySelectorAll('[id^="start-trial-"]').forEach(button => {
      button.addEventListener('click', (e) => {
        e.preventDefault();
        
        const target = e.target as HTMLButtonElement;
        const priceId = target.dataset.priceId;
        const serviceType = target.dataset.serviceType;
        const planName = target.dataset.planName;
        const basePrice = target.dataset.basePrice;
        const perUnitPrice = target.dataset.perUnitPrice;
        const period = target.dataset.period;
        const features = JSON.parse(target.dataset.features || '[]');
        const trialDays = parseInt(target.dataset.trialDays || '7');
        const successUrl = target.dataset.successUrl;
        const cancelUrl = target.dataset.cancelUrl;

        // Open Stripe checkout modal
        if (window.openStripeCheckout) {
          window.openStripeCheckout(
            priceId,
            serviceType,
            planName,
            basePrice,
            perUnitPrice,
            period,
            features,
            trialDays,
            successUrl,
            cancelUrl
          );
        } else {
          console.error('Stripe checkout modal not available');
          alert('Checkout system is not available. Please try again later.');
        }
      });
    });
  });
</script>
